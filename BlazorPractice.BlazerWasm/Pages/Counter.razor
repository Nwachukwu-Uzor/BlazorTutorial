@page "/counter"
@implements IDisposable
@inject CounterStore counterStore
@inject IActionDispatcher actionDispatcher

@inherits DateTimeBaseComponent
<PageTitle>Counter</PageTitle>
<br />
<h4>Date: @CurrentDateTime</h4>

<p role="status">Current count: @counterStore.GetState().Count</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="button" @onclick="showChild">Show Child</button>
<CascadingValue Name="Counter" Value="@currentCount">
    <Component1 @ref="child"/>
</CascadingValue>


@code {
    private int currentCount = 0;
    private Component1 child;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        counterStore.AddStateChangeListener(Update);
    }
    private void IncrementCount()
    {
        actionDispatcher.Dispatch(new IncrementAction());
    }

    private void Update()
    {
        StateHasChanged();
    }

    private void showChild()
    {
        child.DisplayComponent();
    }

    public void Dispose()
    {
        counterStore.RemoveStateChangeListener(Update);
    }
}
