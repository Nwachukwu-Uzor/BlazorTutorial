@page "/sales"
@inject IEmployeeService employeeService

<PageTitle>Sales</PageTitle>
<TitleComponent DepartmentName="Sales" />
<br />
<EditForm Model="user" OnValidSubmit="OnValidFormSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <InputText @bind-Value="user.Fullname" id="fullName"/>
    <InputText @bind-Value="user.Username" id="username"/>
    <InputText @bind-Value="user.Email" id="email"/>
    <InputNumber @bind-Value="user.EmployeeNumber" id="employeeNumber" />
    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>

<div class="card">
    <div class="card-body">
        <h4>Name: @employee.Name</h4>
        <h5>Title: @employee.Title</h5>
        <h5>Department: @employee.Department</h5>
        <p>UserId: @employee.UserId</p>
    </div>
</div>

@code {
    private User user;
    private Employee employee;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        user = new User();
        if(employee == null)
        {
            var random = new Random();
            int number = random.Next(1, 4);
            Console.WriteLine($"Number: {number}");
            employee = employeeService.GetEmployeeById(number);
        }
    }

    private void OnValidFormSubmit()
    {
        Console.WriteLine($"Name: {user.Fullname}\nUsername: {user.Username}\nEmail: {user.Email}\nEmployee Number: {user.EmployeeNumber}");
    }
}
